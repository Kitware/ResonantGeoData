# Generated by Django 3.0.7 on 2020-06-16 13:26

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import geodata.models.geometry.base
import geodata.models.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GeometryEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(editable=False, help_text='The last time this entry was saved.')),
                ('created', models.DateTimeField(editable=False, help_text='When this was added to the database.')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('acquisition_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('data', django.contrib.gis.db.models.fields.GeometryCollectionField(srid=4326)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RasterFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(editable=False, help_text='The last time this entry was saved.')),
                ('created', models.DateTimeField(editable=False, help_text='When this was added to the database.')),
                ('raster_file', models.FileField(upload_to='rasters')),
                ('failure_reason', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, geodata.models.mixins.PostSaveEventMixin),
        ),
        migrations.CreateModel(
            name='RasterEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(editable=False, help_text='The last time this entry was saved.')),
                ('created', models.DateTimeField(editable=False, help_text='When this was added to the database.')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('acquisition_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('instrumentation', models.CharField(blank=True, help_text='The instrumentation used to acquire these data.', max_length=100, null=True)),
                ('footprint', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('crs', models.CharField(max_length=100)),
                ('origin', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=2)),
                ('extent', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=4)),
                ('resolution', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=2)),
                ('height', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
                ('number_of_bands', models.PositiveIntegerField()),
                ('driver', models.CharField(max_length=100)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('transform', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=6)),
                ('raster_file', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='geodata.RasterFile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeometryArchive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(editable=False, help_text='The last time this entry was saved.')),
                ('created', models.DateTimeField(editable=False, help_text='When this was added to the database.')),
                ('archive_file', models.FileField(help_text='This must be an archive (`.zip`) of a single shape (`.shp`, `.dbf`, `.shx`, etc.).', upload_to='geometry_files', validators=[geodata.models.geometry.base.validate_zip_extension])),
                ('failure_reason', models.TextField(blank=True, null=True)),
                ('geometry_entry', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='geodata.GeometryEntry')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, geodata.models.mixins.PostSaveEventMixin),
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('geometries', models.ManyToManyField(to='geodata.GeometryEntry')),
                ('rasters', models.ManyToManyField(to='geodata.RasterEntry')),
            ],
        ),
        migrations.CreateModel(
            name='ConvertedRasterFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(editable=False, help_text='The last time this entry was saved.')),
                ('created', models.DateTimeField(editable=False, help_text='When this was added to the database.')),
                ('converted_file', models.FileField(upload_to='')),
                ('failure_reason', models.TextField(blank=True, null=True)),
                ('source_raster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geodata.RasterEntry')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BandMetaEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(editable=False, help_text='The last time this entry was saved.')),
                ('created', models.DateTimeField(editable=False, help_text='When this was added to the database.')),
                ('description', models.TextField(blank=True, help_text='Automatically retreived from raster but can be overwritten.', null=True)),
                ('dtype', models.CharField(max_length=10)),
                ('max', models.FloatField(null=True)),
                ('min', models.FloatField(null=True)),
                ('mean', models.FloatField(null=True)),
                ('std', models.FloatField(null=True)),
                ('nodata_value', models.FloatField(null=True)),
                ('parent_raster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geodata.RasterEntry')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]

# Generated by Django 3.1 on 2020-08-18 16:15

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import s3_file_field.fields

import geodata.models.mixins


class Migration(migrations.Migration):

    dependencies = [
        ('geodata', '0002_django31_jsonfield_import'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArbitraryFile',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('checksum', models.CharField(blank=True, max_length=64, null=True)),
                ('compute_checksum', models.BooleanField(default=False)),
                ('validate_checksum', models.BooleanField(default=False)),
                ('last_validation', models.BooleanField(default=True)),
                (
                    'file',
                    s3_file_field.fields.S3FileField(max_length=2000, upload_to='files/arbitrary/'),
                ),
            ],
            options={'abstract': False},
            bases=('geodata.modifiableentry',),
        ),
        migrations.CreateModel(
            name='Segmentation',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'outline',
                    django.contrib.gis.db.models.fields.PolygonField(
                        help_text='The bounding box', null=True, srid=0
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name='annotation',
            name='bounding_box',
        ),
        migrations.RemoveField(
            model_name='annotation',
            name='feature',
        ),
        migrations.AddField(
            model_name='annotation',
            name='keypoints',
            field=django.contrib.gis.db.models.fields.MultiPointField(null=True, srid=0),
        ),
        migrations.AddField(
            model_name='annotation',
            name='line',
            field=django.contrib.gis.db.models.fields.LineStringField(null=True, srid=0),
        ),
        migrations.CreateModel(
            name='PolygonSegmentation',
            fields=[
                (
                    'segmentation_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.segmentation',
                    ),
                ),
                (
                    'feature',
                    django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=0),
                ),
            ],
            bases=('geodata.segmentation',),
        ),
        migrations.CreateModel(
            name='RLESegmentation',
            fields=[
                (
                    'segmentation_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.segmentation',
                    ),
                ),
                ('blob', models.BinaryField()),
                ('height', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
            ],
            bases=('geodata.segmentation',),
        ),
        migrations.AddField(
            model_name='segmentation',
            name='annotation',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to='geodata.annotation'
            ),
        ),
        migrations.CreateModel(
            name='KWCOCOArchive',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('failure_reason', models.TextField(blank=True, null=True)),
                (
                    'image_archive',
                    models.ForeignKey(
                        help_text='An archive (.tar or .zip) of the images referenced by the spec file (optional).',
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='kwcoco_image_archive',
                        to='geodata.arbitraryfile',
                    ),
                ),
                (
                    'image_set',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to='geodata.imageset',
                    ),
                ),
                (
                    'spec_file',
                    models.ForeignKey(
                        help_text='The JSON spec file.',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='kwcoco_spec_file',
                        to='geodata.arbitraryfile',
                    ),
                ),
            ],
            bases=('geodata.modifiableentry', geodata.models.mixins.TaskEventMixin),
        ),
    ]

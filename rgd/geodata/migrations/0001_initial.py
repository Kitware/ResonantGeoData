# Generated by Django 3.1.5 on 2021-01-26 23:22

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import s3_file_field.fields

import rgd.geodata.models.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='ModifiableEntry',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'modified',
                    models.DateTimeField(
                        editable=False, help_text='The last time this entry was saved.'
                    ),
                ),
                (
                    'created',
                    models.DateTimeField(
                        editable=False, help_text='When this was added to the database.'
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Segmentation',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'outline',
                    django.contrib.gis.db.models.fields.PolygonField(
                        help_text='The bounding box', null=True, srid=0
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='SpatialEntry',
            fields=[
                ('spatial_id', models.AutoField(primary_key=True, serialize=False)),
                ('acquisition_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('footprint', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('outline', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('caption', models.CharField(blank=True, max_length=100, null=True)),
                ('label', models.CharField(blank=True, max_length=100, null=True)),
                ('annotator', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                (
                    'keypoints',
                    django.contrib.gis.db.models.fields.MultiPointField(null=True, srid=0),
                ),
                ('line', django.contrib.gis.db.models.fields.LineStringField(null=True, srid=0)),
            ],
            bases=('geodata.modifiableentry',),
        ),
        migrations.CreateModel(
            name='BandMetaEntry',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('band_number', models.IntegerField()),
                (
                    'description',
                    models.TextField(
                        blank=True,
                        help_text='Automatically retreived from raster but can be overwritten.',
                        null=True,
                    ),
                ),
                ('dtype', models.CharField(max_length=10)),
                ('max', models.FloatField()),
                ('min', models.FloatField()),
                ('mean', models.FloatField()),
                ('std', models.FloatField()),
                ('nodata_value', models.FloatField(null=True)),
                ('interpretation', models.TextField()),
            ],
            bases=('geodata.modifiableentry',),
        ),
        migrations.CreateModel(
            name='ChecksumFile',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('name', models.CharField(blank=True, max_length=100)),
                ('checksum', models.CharField(max_length=128)),
                ('validate_checksum', models.BooleanField(default=False)),
                ('last_validation', models.BooleanField(default=True)),
                ('type', models.IntegerField(choices=[(1, 'FileField'), (2, 'URL')], default=1)),
                ('file', s3_file_field.fields.S3FileField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
            ],
            bases=('geodata.modifiableentry',),
        ),
        migrations.CreateModel(
            name='GeometryArchive',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('failure_reason', models.TextField(null=True)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('created', 'Created but not queued'),
                            ('queued', 'Queued for processing'),
                            ('running', 'Processing'),
                            ('failed', 'Failed'),
                            ('success', 'Succeeded'),
                        ],
                        default='created',
                        max_length=20,
                    ),
                ),
                (
                    'file',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='geodata.checksumfile'
                    ),
                ),
            ],
            bases=('geodata.modifiableentry', rgd.geodata.models.mixins.TaskEventMixin),
        ),
        migrations.CreateModel(
            name='ImageEntry',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                (
                    'instrumentation',
                    models.CharField(
                        blank=True,
                        help_text='The instrumentation used to acquire these data.',
                        max_length=100,
                        null=True,
                    ),
                ),
                ('driver', models.CharField(max_length=100)),
                ('height', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
                ('number_of_bands', models.PositiveIntegerField()),
                ('metadata', models.JSONField(null=True)),
            ],
            bases=('geodata.modifiableentry',),
        ),
        migrations.CreateModel(
            name='ImageSet',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('images', models.ManyToManyField(to='geodata.ImageEntry')),
            ],
            bases=('geodata.modifiableentry',),
        ),
        migrations.CreateModel(
            name='PolygonSegmentation',
            fields=[
                (
                    'segmentation_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.segmentation',
                    ),
                ),
                (
                    'feature',
                    django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=0),
                ),
            ],
            bases=('geodata.segmentation',),
        ),
        migrations.CreateModel(
            name='RasterEntry',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('failure_reason', models.TextField(null=True)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('created', 'Created but not queued'),
                            ('queued', 'Queued for processing'),
                            ('running', 'Processing'),
                            ('failed', 'Failed'),
                            ('success', 'Succeeded'),
                        ],
                        default='created',
                        max_length=20,
                    ),
                ),
                (
                    'image_set',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to='geodata.imageset'
                    ),
                ),
            ],
            bases=('geodata.modifiableentry', rgd.geodata.models.mixins.TaskEventMixin),
        ),
        migrations.CreateModel(
            name='RLESegmentation',
            fields=[
                (
                    'segmentation_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.segmentation',
                    ),
                ),
                ('blob', models.BinaryField()),
                ('height', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
            ],
            bases=('geodata.segmentation',),
        ),
        migrations.CreateModel(
            name='Thumbnail',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('base_thumbnail', models.ImageField(upload_to='thumbnails')),
                (
                    'image_entry',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to='geodata.imageentry'
                    ),
                ),
            ],
            bases=('geodata.modifiableentry',),
        ),
        migrations.CreateModel(
            name='SubsampledImage',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                (
                    'sample_type',
                    models.CharField(
                        choices=[
                            ('pixel box', 'Pixel bounding box'),
                            ('geographic box', 'Geographic bounding box'),
                            ('geojson', 'GeoJSON feature'),
                            ('annotation', 'Annotation entry'),
                        ],
                        default='pixel box',
                        max_length=20,
                    ),
                ),
                ('sample_parameters', models.JSONField()),
                ('failure_reason', models.TextField(null=True)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('created', 'Created but not queued'),
                            ('queued', 'Queued for processing'),
                            ('running', 'Processing'),
                            ('failed', 'Failed'),
                            ('success', 'Succeeded'),
                        ],
                        default='created',
                        max_length=20,
                    ),
                ),
                (
                    'data',
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='geodata.checksumfile',
                    ),
                ),
                (
                    'source_image',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='geodata.imageentry'
                    ),
                ),
            ],
            bases=('geodata.modifiableentry', rgd.geodata.models.mixins.TaskEventMixin),
        ),
        migrations.AddField(
            model_name='segmentation',
            name='annotation',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to='geodata.annotation'
            ),
        ),
        migrations.CreateModel(
            name='RasterMetaEntry',
            fields=[
                (
                    'spatialentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        to='geodata.spatialentry',
                    ),
                ),
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('crs', models.TextField(help_text='PROJ string')),
                (
                    'origin',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(), size=2
                    ),
                ),
                (
                    'extent',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(), size=4
                    ),
                ),
                (
                    'resolution',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(), size=2
                    ),
                ),
                (
                    'transform',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(), size=6
                    ),
                ),
                (
                    'parent_raster',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to='geodata.rasterentry'
                    ),
                ),
            ],
            bases=('geodata.modifiableentry', 'geodata.spatialentry'),
        ),
        migrations.CreateModel(
            name='KWCOCOArchive',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('name', models.CharField(blank=True, max_length=100)),
                ('failure_reason', models.TextField(null=True)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('created', 'Created but not queued'),
                            ('queued', 'Queued for processing'),
                            ('running', 'Processing'),
                            ('failed', 'Failed'),
                            ('success', 'Succeeded'),
                        ],
                        default='created',
                        max_length=20,
                    ),
                ),
                (
                    'image_archive',
                    models.OneToOneField(
                        help_text='An archive (.tar or .zip) of the images referenced by the spec file (optional).',
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='kwcoco_image_archive',
                        to='geodata.checksumfile',
                    ),
                ),
                (
                    'image_set',
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='geodata.imageset',
                    ),
                ),
                (
                    'spec_file',
                    models.OneToOneField(
                        help_text='The JSON spec file.',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='kwcoco_spec_file',
                        to='geodata.checksumfile',
                    ),
                ),
            ],
            bases=('geodata.modifiableentry', rgd.geodata.models.mixins.TaskEventMixin),
        ),
        migrations.CreateModel(
            name='ImageFile',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('failure_reason', models.TextField(null=True)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('created', 'Created but not queued'),
                            ('queued', 'Queued for processing'),
                            ('running', 'Processing'),
                            ('failed', 'Failed'),
                            ('success', 'Succeeded'),
                        ],
                        default='created',
                        max_length=20,
                    ),
                ),
                (
                    'file',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='geodata.checksumfile'
                    ),
                ),
            ],
            bases=('geodata.modifiableentry', rgd.geodata.models.mixins.TaskEventMixin),
        ),
        migrations.AddField(
            model_name='imageentry',
            name='image_file',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to='geodata.imagefile'
            ),
        ),
        migrations.CreateModel(
            name='GeometryEntry',
            fields=[
                (
                    'spatialentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        to='geodata.spatialentry',
                    ),
                ),
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('data', django.contrib.gis.db.models.fields.GeometryCollectionField(srid=4326)),
                (
                    'geometry_archive',
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='geodata.geometryarchive',
                    ),
                ),
            ],
            bases=('geodata.modifiableentry', 'geodata.spatialentry'),
        ),
        migrations.CreateModel(
            name='FMVFile',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('failure_reason', models.TextField(null=True)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('created', 'Created but not queued'),
                            ('queued', 'Queued for processing'),
                            ('running', 'Processing'),
                            ('failed', 'Failed'),
                            ('success', 'Succeeded'),
                        ],
                        default='created',
                        max_length=20,
                    ),
                ),
                ('klv_file', s3_file_field.fields.S3FileField(null=True)),
                ('web_video_file', s3_file_field.fields.S3FileField(null=True)),
                ('frame_rate', models.FloatField(null=True)),
                (
                    'file',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='geodata.checksumfile'
                    ),
                ),
            ],
            bases=('geodata.modifiableentry', rgd.geodata.models.mixins.TaskEventMixin),
        ),
        migrations.CreateModel(
            name='FMVEntry',
            fields=[
                (
                    'spatialentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        to='geodata.spatialentry',
                    ),
                ),
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('ground_frames', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('ground_union', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('flight_path', django.contrib.gis.db.models.fields.MultiPointField(srid=4326)),
                ('frame_numbers', models.BinaryField()),
                (
                    'fmv_file',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to='geodata.fmvfile'
                    ),
                ),
            ],
            bases=('geodata.modifiableentry', 'geodata.spatialentry'),
        ),
        migrations.CreateModel(
            name='ConvertedImageFile',
            fields=[
                (
                    'modifiableentry_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='geodata.modifiableentry',
                    ),
                ),
                ('failure_reason', models.TextField(null=True)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('created', 'Created but not queued'),
                            ('queued', 'Queued for processing'),
                            ('running', 'Processing'),
                            ('failed', 'Failed'),
                            ('success', 'Succeeded'),
                        ],
                        default='created',
                        max_length=20,
                    ),
                ),
                (
                    'converted_file',
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='geodata.checksumfile',
                    ),
                ),
                (
                    'source_image',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to='geodata.imageentry'
                    ),
                ),
            ],
            bases=('geodata.modifiableentry', rgd.geodata.models.mixins.TaskEventMixin),
        ),
        migrations.AddConstraint(
            model_name='checksumfile',
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ('file__regex', '.+'),
                        ('type', 1),
                        models.Q(('url__in', ['', None]), ('url__isnull', True), _connector='OR'),
                    ),
                    models.Q(
                        ('type', 2),
                        models.Q(('url__isnull', False), ('url__regex', '.+')),
                        models.Q(('file__in', ['', None]), ('file__isnull', True), _connector='OR'),
                    ),
                    _connector='OR',
                ),
                name='geodata_checksumfile_file_source_value_matches_type',
            ),
        ),
        migrations.AddField(
            model_name='bandmetaentry',
            name='parent_image',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='geodata.imageentry'
            ),
        ),
        migrations.AddField(
            model_name='annotation',
            name='image',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='geodata.imageentry'
            ),
        ),
    ]

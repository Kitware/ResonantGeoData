version: '3'
services:
  django:
    build:
      context: .
      dockerfile: ./dev/django.Dockerfile
    command: ["./manage.py", "runserver", "0.0.0.0:8000"]
    # Log printing via Rich is enhanced by a TTY
    tty: true
    env_file: ./dev/.env.docker-compose
    volumes:
      - .:/opt/django-project
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - rabbitmq
      - minio

  celery:
    build:
      context: .
      dockerfile: ./dev/django.Dockerfile
    command: [
      "celery",
      "--app", "rgd.celery",
      "worker",
      "--loglevel", "INFO",
      "--without-heartbeat"
    ]
    # Docker Compose does not set the TTY width, which causes Celery errors
    tty: false
    env_file: ./dev/.env.docker-compose
    environment:
      - TMPDIR=/tmp/rgd_worker
    volumes:
      - .:/opt/django-project
      - ${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock
      - ${DOCKER_CMD:-/usr/bin/docker}:/usr/bin/docker
      - /tmp/rgd_worker:/tmp/rgd_worker
    depends_on:
      - postgres
      - rabbitmq
      - minio

  flower:
    image: mher/flower
    command: ["--broker=amqp://rabbitmq:5672/", "--url_prefix=flower"]

  sass:
    build:
      context: ./dev
      dockerfile: ./sass.Dockerfile
    volumes:
      # Must point to top level, image will compile things in `sass/ su`
      - ./rgd/geodata/static/css/:/src
